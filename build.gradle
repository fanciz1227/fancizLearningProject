plugins {
	id 'org.springframework.boot' version '2.5.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
	id 'nu.studer.jooq' version '6.0'
}

group = 'com.jktoy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath

}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//Querydsl setting
	implementation('com.querydsl:querydsl-jpa')
	implementation('com.querydsl:querydsl-apt')

	//Jooq setting
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation "org.jooq.pro-java-11:jooq:3.15.1"
	modules {
		module("org.jooq:jooq") {
			replacedBy("org.jooq.pro-java-11:jooq", "nu.studer.jooq bugfix #183")
		}
	}
}

//Querydsl setting
def querydslSrcDir = "$buildDir/generated/querydsl"

querydsl {
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslSrcDir
}

compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', querydslSrcDir]
		}
	}
}

//Jooq setting
jooq {
	version = '3.15.0'  // default (can be omitted)
	edition = nu.studer.gradle.jooq.JooqEdition.OSS  // default (can be omitted)

	configurations {
		main {  // name of the jOOQ configuration
			generateSchemaSourceOnCompilation = true  // default (can be omitted)

			generationTool {
				jdbc {
					driver = 'com.mysql.jdbc.Driver'
					url = 'jdbc:mysql://localhost:3306/test_db?serverTimezone=UTC&characterEncoding=UTF-8'
					user = 'root'
					password = 'test1234'
					properties {
						property {
							key = 'ssl'
							value = 'true'
						}
					}
				}
				generator {
					name = 'org.jooq.codegen.DefaultGenerator'
					database {
						name = 'org.jooq.meta.mysql.MySQLDatabase'
						inputSchema = 'public'
						forcedTypes {
							forcedType {
								name = 'varchar'
								includeExpression = '.*'
								includeTypes = 'JSONB?'
							}
							forcedType {
								name = 'varchar'
								includeExpression = '.*'
								includeTypes = 'INET'
							}
						}
					}
					generate {
						deprecated = false
						records = true
						immutablePojos = true
						fluentSetters = true
					}
					target {
						packageName = 'nu.studer.sample'
						directory = 'src/main/jooq-generated'  // default (can be omitted)
					}
					strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
				}
			}
		}
	}
}

test {
	useJUnitPlatform()
}
